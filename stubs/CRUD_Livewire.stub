<?php

namespace App\Http\Livewire\{{ modelName }};

use App\Models\{{ modelName }} as ModelName;
use Livewire\Component;
use Livewire\WithPagination;
use App\Traits\WithSorting;
use App\Traits\WithCheckbox;
use WireUi\Traits\Actions;

class {{ modelName }} extends Component
{
    use WithPagination, Actions, WithCheckbox, WithSorting;

    {{ modelAttributesVariable }}

    public $model;
    public $openModelName = false;

    public $search;
    public $queryString = [
        'page' => ['except' => 1],
        'search' => ['except' => '', 'as' => 'q'],
        'sortDirection' => ['except' => 'asc', 'as' => 'dir'],
    ];

    protected $rules = [{{ rules }}
    ];

    public function mount()
    {
        $this->model = new ModelName();
        $this->model_id = $this->model->id;
    }

    public function store()
    {
        $this->validate();

        {{ modelName }}::create([
           {{ modelAttributesAction }}
        ]);

        $this->resetAttributes();
    }

    public function delete(int $id)
    {
        $this->model->findOrFail($id)->delete();
        $this->notification()->success('Success','Deleted Successfully');
    }

    public function edit(int $id)
    {
        $this->open();
        $this->model_id = $id;
        $edit = {{ modelName }}::findOrFail($id);
        {{ modelAttributesActionForEdit }}
    }

    public function update()
    {
        {{ modelName }}::findOrFail($this->model_id)->update([
            {{ modelAttributesAction }}
        ]);
        $this->close();
        $this->resetAttributes();
    }

    public function close()
    {
        $this->openModelName = false;
    }

    public function open()
    {
        $this->openModelName = true;
    }

    public function resetAttributes(){
        $this->reset([{{ modelAttributesName }}]);
    }

    public function updated()
    {
        $this->setModel('App\\Models\\{{ modelName }}', 'id');
    }

    public function render()
    {
        $all = $this->model
            ::where('id', 'like', '%' . $this->search . '%')
            ->orderBy($this->sortBy, $this->sortDirection)
            ->fastPaginate($this->paginate_page);
        return view('livewire.{{ livewireRedirect }}.{{ livewireRedirect }}', compact('all'));
    }
}
